<?xml version="1.0" encoding="UTF-8"?>
<!--

 /**
  * Â© Copyright IBM Corporation 2015, 2018.
  * This is licensed under the following license.
  * The Eclipse Public 1.0 License (http://www.eclipse.org/legal/epl-v10.html)
  * U.S. Government Users Restricted Rights:  Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
  */

-->
<plugin xmlns="http://www.urbancode.com/PluginXMLSchema_v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <header>
    <identifier version="31" id="com.urbancode.air.plugin.Informatica" name="Informatica"/>
    <description>
    The Informatica plugin is an automation based plugin. It is executed as part of the deployment to migrate Informatica configuration and run scripts against the Informatica server and for creating and deploying deploying groups.
    </description>
    <tag>Middleware/Business Intelligence/Informatica</tag>
  </header>
  <!-- ======================== -->
  <!--   STEPS                  -->
  <!-- ======================== -->
  <step-type name="Create Static Deployment Group">
    <description>Create a static Deployment Group and add Informatica Workflows to it.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="groupname" required="true">
        <property-ui type="textBox" label="Informatica Group" description="The name of the static deployment group to create for deployment."/>
      </property>
      <property name="folder" required="true">
        <property-ui type="textBox" label="Informatica Folder" description="The folder to create the deployment group in."/>
      </property>
      <property name="objectFile">
        <property-ui type="textBox" label="Informatica File" description="Informatica-formatted file containing the object to add to the deployment group."/>
      </property>
      <property name="workflows">
        <property-ui type="textAreaBox" label="Informatica Workflows" description="The names of workflows (space or line separated) to add to the depoloyment group."/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="create_static_deployment.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Create Dynamic Deployment Group">
    <description>Create a dynamic Deployment Group and populate it using a named query.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="groupname" required="true">
        <property-ui type="textBox" label="Informatica Group" description="The name of the dynamic deployment group to create for deployment."/>
      </property>
      <property name="query" required="true">
        <property-ui type="textBox" label="Dynamic Query Name" description="The name of the query to use to populate the created dynamic deployment group."/>
      </property>
      <property name="type" required="true">
        <property-ui type="textBox" label="Dynamic Query Type" description="The type of query to create a deployment group. You can specify shared or personal."
            placeholder="shared or personal"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="create_dynamic_deployment.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Deploy Deployment Group">
    <description>Deploy a deployment group from one server to another.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain" required="false">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server.  Will be preferred over host/port." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="srcrepo" required="true">
        <property-ui type="textBox" label="Source Repository" description="The repository name in Informatica for the source server." default-value="${p:resource/informatica/srcrepo}"/>
      </property>
      <property name="srcdomain">
        <property-ui type="textBox" label="Source Domain Name" description="The domain name of the Informatica server for the source server." default-value="${p:resource/informatica/srcdomain}"/>
      </property>
      <property name="srchost">
        <property-ui type="textBox" label="Source Host" description="The host name of the Informatica server for the source server." default-value="${p:resource/informatica/srchost}"/>
      </property>
      <property name="srcport">
        <property-ui type="textBox" label="Source Port" description="The port number of the Informatica server for the source server." default-value="${p:resource/informatica/srcport}"/>
      </property>
      <property name="srcusername" required="true">
        <property-ui type="textBox" label="Source Username" description="The username to use to authenticate with Informatica for the source server." default-value="${p:resource/informatica/srcusername}"/>
      </property>
      <property name="srcpassword">
        <property-ui type="secureBox" label="Source Password" description="The password to use to authenticate with Informatica for the source server." default-value="${p:resource/informatica/srcpassword}"/>
      </property>
      <property name="srcpasswordscript">
        <property-ui type="textBox" label="Source Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here for the source server." default-value="${p:resource/informatica/srcpassscript}"/>
      </property>
      <property name="srcsecurityDomain">
        <property-ui type="textBox" label="Source Security Domain" description="Required if you use LDAP authentication with Informatica for the source server.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="groupname" required="true">
        <property-ui type="textBox" label="Informatica Group" description="The name of the deployment group to deploy."/>
      </property>
      <property name="folder" required="true">
        <property-ui type="textAreaBox" label="Source Informatica Folder(s)" description="The source folder(s) of the deployment group objects. Separate each folder with a comma or new line.  If left blank, the folders from the source deployment group will be used."/>
      </property>
      <property name="folderDest">
        <property-ui type="textAreaBox" label="Destination Informatica Folder(s)" description="The destination folder(s) for the deployment group objects.
                    This is a 1:1 mapping with 'Source Informatica Folder(S)'. Separate each folder with a comma or new line. If this property is blank but source is provided, the source
                    folder names will be used as the destination folder names. "/>
      </property>
      <property name="syncFolders" required="true">
        <property-ui type="textBox" label="Sync Folders to Target" description="Set to true to automatically create folders on the target that do not exist but are in the source.  This option is only observed when there is no mappings set, and the source folders are being automatically mapped to the destination." default-value="false"/>
      </property>
      <property name="syncExcludePrefix" required="false">
        <property-ui type="textBox" label="Prefixes to exclude on Folder Sync" description="A comma seperated list of prefixes to exclude from the automatic folder sync.  This setting is only observed when folders are being automatically created and no fixed mappings are defined."/>
      </property>
      <property name="label" required="false">
        <property-ui type="textBox" label="Informatica Label" description="The name of the label used to populate the dynamic deployment group if deploying a dynamic deployment group." hidden="true" />
      </property>
      <property name="copydeploymentgroup" required="false">
        <property-ui type="checkBox" label="Copy Deployment Group" description="Control Parameter: Select to copy the deployment group with its objects (in the deployment group) to the target repository." hidden="true" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${PLUGIN_HOME}/deploy_deploymentgroup.sh">
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Roll Back Deployment Group">
    <description>Roll back a deployment of a deployment group.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="groupname" required="true">
        <property-ui type="textBox" label="Informatica Group" description="The name of the group to roll back."/>
      </property>
      <property name="numrevs" required="true">
        <property-ui type="textBox" label="Number of Revisions" description="How many revisions to roll back (1 is most recent revision)."/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="informatica_roll_back_deployment.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Validate Deployment Group">
    <description>Validate a deployed deployment group in the target server.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication. Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="lang">
        <property-ui type="textBox" label="LANG" description="Set the LANG environment variable. Example values can be UTF-8, ISO-8859-1 and etc. If set, will override the exsiting value on the target." default-value="UTF-8"/>
      </property>
      <property name="query" required="true">
        <property-ui type="textBox" label="Validation Query" description="The name of the query to run to query the invalid objects of the deployment."/>
      </property>
      <property name="validationFile" required="true">
        <property-ui type="textBox" label="Validation File" description="The name of the file to output validated object to."/>
      </property>
      <property name="validationProp" required="true">
        <property-ui type="textBox" label="Property Name" default-value="informatica.invalid.objects" description="The property name to set on the job if the step found invalid objects. Set to 'true' if found."/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="validate_deployment.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Apply Label">
    <description>Apply a label to objects in the target server.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="label" required="true">
        <property-ui type="textBox" label="Informatica Label" description="The name of the label to apply to the objects."/>
      </property>
      <property name="objectsFile" required="true">
        <property-ui type="textBox" label="Objects File" description="The name of the file containing the objects to label."/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="apply_label.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Run PMREP Command">
    <description>Run pmrep with the commands given to pmrep defined in this step. The step will automatically add the connect and exit commands.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox" label="Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox" label="Security Domain" description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="commands" required="true">
        <property-ui type="textAreaBox" label="PMREP Commands" description="The commands to pass to pmrep. The connect and exit are not needed. Enter each command on a new line."/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="run_pmrep.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Import Objects">
    <description>
      Import Objects from XML files. The step will automatically add the connect and exit commands and generate the necessary control files.
    </description>
    <properties>
      <property name="dirOffset">
        <property-ui type="textBox"
                     label="Directory Offset"
                     description="The sub-directory of the current working directory where you want to execute this step.
                                  Absolute paths are not allowed."/>
      </property>
      <property name="repo" required="true">
        <property-ui type="textBox"
                     label="Repository"
                     description="The repository name in Informatica."
                     default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox"
                     label="Domain Name"
                     description="The domain name of the Informatica server."
                     default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox"
                     label="Host"
                     description="The host name of the Informatica server."
                     default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox"
                     label="Port"
                     description="The port number of the Informatica server."
                     default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox"
                     label="Username"
                     description="The username to use to authenticate with Informatica."
                     default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox"
                     label="Password"
                     description="The password to use to authenticate with Informatica."
                     default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox"
                     label="Password Script"
                     description="If a property or script should be used to retrieve the password,
                                  leave it blank and put the property or script here."
                     default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox"
                     label="Security Domain"
                     description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome">
        <property-ui type="textBox"
                     label="INFA HOME"
                     description="The INFA_HOME variable to be set on the environment.
                                  If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to
                                  LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="lang">
        <property-ui type="textBox"
                     label="LANG"
                     description="Set the LANG environment variable. Example values can be UTF-8, ISO-8859-1 and etc.
                                  If set, will override the exsiting value on the target."
                     default-value="UTF-8"/>
      </property>

      <property name="retainGenSeq">
        <property-ui type="checkBox" label="Retain Generated Value" description="When selected, this will add the attribute 'RETAIN_GENERATED_VALUE=YES' to the IMPORTPARAMS element in the ctl files"/>
      </property>

      <property name="checkinAfterImport">
        <property-ui type="checkBox" label="Checkin after import" description="When selected, this will add the attribute 'CHECKIN_AFTER_IMPORT=YES' to the IMPORTPARAMS element in the ctl files"/>
      </property>

      <property name="include" required="true">
        <property-ui type="textAreaBox"
                     label="Include Files"
                     description="A list of XML files to include in the import. Supports * style file filters."/>
      </property>
      <property name="exclude">
        <property-ui type="textAreaBox"
                     label="Exclude Files"
                     description="A list of XML files to exlude from the import. Supports * style file filters."/>
      </property>
      <property name="folderMappingList">
        <property-ui type="textAreaBox"
                     label="Folder Mapping"
                     description="New line separated list of folder mappings using [old folder]=[new folder] notation.
                                  Full file path containing the folder mapings list may be specified as an alternative.
                                  If no values are provided or the old folder value from the XML file does not have a
                                  mapping the control file will use the old folder name as the new folder name."/>
      </property>
      <property name="repositoryMappingList">
        <property-ui type="textAreaBox"
                     label="Repository Mapping"
                     description="A new line separated list of repository mappings using [old repository]=[new repository] notation.
                                  Full file path containing the repository mapings list may be specified as an alternative.
                                  If no values are provided or the old repository value from the XML file does not have a
                                  mapping the control file will use the old repository name as the new repository name."/>
      </property>
      <property name="conflictResolutionList">
        <property-ui type="textAreaBox"
                     label="Conflict Resolution Rules"
                     description="A new line separated list of conflict resolution overrides using the
                                  [object type name]=[resolution] notation.
                                  Full file path containing the conflict resolution rules list may be specified as an alternative.
                                  If no override is provided the default conflict resolution specified below will be used."/>
      </property>
      <property name="conflictResolutionDefault" required="true">
        <property-ui type="selectBox"
                     label="Default Conflict Resolution"
                     default-value="REPLACE"
                     description="The default conflict resolution."/>
                     <value label="REPLACE">REPLACE</value>
                     <value label="REUSE">REUSE</value>
                     <value label="RENAME">RENAME</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="import_objects.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Create Folder">
    <description>
      Creates a folder in the repository.
    </description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox"
                     label="Repository"
                     description="The repository name in Informatica."
                     default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox"
                     label="Domain Name"
                     description="The domain name of the Informatica server."
                     default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox"
                     label="Host"
                     description="The host name of the Informatica server."
                     default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox"
                     label="Port"
                     description="The port number of the Informatica server."
                     default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox"
                     label="Username"
                     description="The username to use to authenticate with Informatica."
                     default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox"
                     label="Password"
                     description="The password to use to authenticate with Informatica."
                     default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox"
                     label="Password Script"
                     description="If a property or script should be used to retrieve the password,
                                  leave it blank and put the property or script here."
                     default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="folderArray" required="true">
        <property-ui type="textAreaBox"
                     label="Folder List"
                     description="List the names of the folders you wish to create. Separate
                     each folder with a new line or comma. "/>
      </property>
      <property name="permissions">
        <property-ui type="textBox"
                     label="Permissions"
                     description="The permission settings to assign to all folders. Use the binary reference to specify permissions. Example: 777"/>
      </property>
      <property name="description">
        <property-ui type="textBox"
                     label="Description"
                     description="Description to give to all folders."/>
      </property>
      <property name="owner">
        <property-ui type="textBox"
                     label="Owner"
                     description="The Owner name to assign all folders."/>
      </property>
      <property name="ownerSecurityDomain">
        <property-ui type="textBox"
                     label="Owner Security Domain"
                     description="The Owner Security Domain to assign all folders."/>
      </property>
      <property name="sharedFolder">
        <property-ui type="checkBox"
                     label="Share Folders"
                     description="Make the folders shared."/>
      </property>
      <property name='frozen'>
        <property-ui type='selectBox'
                     label='Frozen Setting'
                     description='Select the active or frozen setting from the list.' />
        <value label='Default'>0</value>
        <value label='Active'>active</value>
        <value label='Frozen Deploy'>frozendeploy</value>
        <value label='Frozen No Deploy'>frozennodeploy</value>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="create_folder.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Assign Permission">
    <description>
      Add, remove, or update permissions on a global object for a user, group, or the Others default group. Note: Only the administrator or the current owner of the object can manage permissions on the object.
    </description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox"
                     label="Repository"
                     description="The repository name in Informatica."
                     default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="domain">
        <property-ui type="textBox"
                     label="Domain Name"
                     description="The domain name of the Informatica server."
                     default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="host">
        <property-ui type="textBox"
                     label="Host"
                     description="The host name of the Informatica server."
                     default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox"
                     label="Port"
                     description="The port number of the Informatica server."
                     default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox"
                     label="Username"
                     description="The username to use to authenticate with Informatica."
                     default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox"
                     label="Password"
                     description="The password to use to authenticate with Informatica."
                     default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox"
                     label="Password Script"
                     description="If a property or script should be used to retrieve the password,
                                  leave it blank and put the property or script here."
                     default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="objectType" required="true">
        <property-ui type="selectBox"
                     label="Object Type"
                     default-value="folder"
                     description="Type of the object for which you want to manage permissions."/>
        <value label="Connection">connection</value>
        <value label="Deployment Group">deploymentgroup</value>
        <value label="Folder">folder</value>
        <value label="Label">label</value>
        <value label="Query">query</value>
      </property>
      <property name="objectSubtype">
        <property-ui type="selectBox"
                     label="Object Subtype"
                     description="Type of Connection or Query object. Not required for other object types."/>
        <value label="">Null</value>
        <value label="Connection-Application">Application</value>
        <value label="Connection-FTP">FTP</value>
        <value label="Connection-Loader">Loader</value>
        <value label="Connection-Queue">Queue</value>
        <value label="Connection-Relational">Relational</value>
        <value label="Query-Shared">Shared</value>
        <value label="Query-Personal">Personal</value>
      </property>
      <property name="objectName" required="true">
        <property-ui type="textBox"
                     label="Object Name"
                     description="Name of the object for which you want to manage permissions."/>
      </property>
      <property name="permission" required="true">
        <property-ui type="textBox"
                     label="Permission"
                     description="The permission settings to assign the object. Use the characters r, w, and x to assign read, write, and execute permissions."/>
      </property>
      <property name="assignedUsername">
        <property-ui type="textBox"
                     label="User Name to assign Object"
                     description=" Name of the user for whom you want to add, remove, or update permissions.
                     Required if Group Name is not specified. Do not specify both."/>
      </property>
      <property name="assignedGroupName">
        <property-ui type="textBox"
                     label="Group Name to assign Object"
                     description="Name of the group for which you want to add, remove, or update permissions.
                     Specify 'Others' as the group name to change permissions for the Others default group.
                     Required if assigned User Name is not specified. Do not specify both."/>
      </property>
      <property name="securityDomain">
        <property-ui type="textBox"
                     label="Security Domain"
                     description="Required if you use LDAP authentication.
                     Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="assign_permission.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
 <step-type name="Folder Migration">
    <description>
      Folder Migration. The step will Migrat folders from Source folders to Target folders and generate the necessary control files.
    </description>
         <properties>
      <property name="srcrepo" required="true">
        <property-ui type="textBox" label="Source Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="srchost">
        <property-ui type="textBox" label="Source Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="srcport">
        <property-ui type="textBox" label="Source Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="srcusername" required="true">
        <property-ui type="textBox" label="Source Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="srcpassword" required="true">
        <property-ui type="secureBox" label="Source Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
       <property name="srcdomain" required="true">
        <property-ui type="textBox" label="Source Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="srcsecurityDomain" required="true">
        <property-ui type="textBox" label="Source Security Domain" description="Required if you use LDAP authentication. Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
         <property name="tarrepo" required="true">
        <property-ui type="textBox" label="Target Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="tarhost">
        <property-ui type="textBox" label="Target Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="tarport">
        <property-ui type="textBox" label="Target Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="tarusername" required="true">
        <property-ui type="textBox" label="Target Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="tarpassword" required="true">
        <property-ui type="secureBox" label="Target Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
       <property name="tardomain" required="true">
        <property-ui type="textBox" label="Target Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="tarsecurityDomain" required="true">
        <property-ui type="textBox" label="Target Security Domain" description="Required if you use LDAP authentication. Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome" required="true">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="srcfolder" required="true">
        <property-ui type="textAreaBox" label="Source Informatica Folder(s)" description="The source folder(s) of the deployment folders. Separate each folder with a comma or new line."/>
      </property>
      <property name="tarfolder">
        <property-ui type="textAreaBox" label="Destination Informatica Folder(s)" description="The target folder(s) for the deployment folders.Separate each folder with a comma or new line. If this property is blank, the source
                    folder names will be used as the destination folder names. "/>
      </property>
      </properties>

    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="folder_migration.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
   <step-type name="Validate Folder Migration">
    <description>
      Validate Folder Migration. The step will validate folder migration in the target server.
    </description>
         <properties>
        <property name="tarrepo" required="true">
        <property-ui type="textBox" label="Target Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="tarhost">
        <property-ui type="textBox" label="Target Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="tarport">
        <property-ui type="textBox" label="Target Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="tarusername" required="true">
        <property-ui type="textBox" label="Target Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="tarpassword" required="true">
        <property-ui type="secureBox" label="Target Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
       <property name="tardomain" required="true">
        <property-ui type="textBox" label="Target Domain Name" description="The domain name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="tarsecurityDomain" required="true">
        <property-ui type="textBox" label="Target Security Domain" description="Required if you use LDAP authentication. Name of the security domain that the user or group belongs to. Default is Native"/>
      </property>
      <property name="infaHome" required="true">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="tarfolder">
        <property-ui type="textAreaBox" label="Validation Informatica Folder(s)" description="The target folder(s) for the deployment folder validation.Separate each folder with a comma or new line. If this property is blank, the source
                    folder names will be used as the destination folder names. "/>
      </property>
      </properties>

    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="validate_folder_migration.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
  <step-type name="Deploy Multiple Deployment Groups">
    <description>Deploy one or more deployment groups from one server to another.</description>
    <properties>
      <property name="repo" required="true">
        <property-ui type="textBox" label="Repository" description="The repository name in Informatica." default-value="${p:resource/informatica/repo}"/>
      </property>
      <property name="tardomain">
        <property-ui type="textBox" label="Target Domain Name" description="The domain name of the Informatica server for the target server." default-value="${p:resource/informatica/tardomain}"/>
	  </property>
      <property name="host">
        <property-ui type="textBox" label="Host" description="The host name of the Informatica server." default-value="${p?:resource/informatica/domain}"/>
      </property>
      <property name="port">
        <property-ui type="textBox" label="Port" description="The port number of the Informatica server." default-value="${p?:resource/informatica/port}"/>
      </property>
      <property name="username" required="true">
        <property-ui type="textBox" label="Username" description="The username to use to authenticate with Informatica." default-value="${p:resource/informatica/username}"/>
      </property>
      <property name="password">
        <property-ui type="secureBox" label="Password" description="The password to use to authenticate with Informatica." default-value="${p?:resource/informatica/password}"/>
      </property>
      <property name="passwordscript">
        <property-ui type="textBox" label="Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here." default-value="${p?:resource/informatica/passscript}"/>
      </property>
      <property name="tarsecurityDomain" required="false">
        <property-ui type="textBox" label="Target Security Domain" description="Required if you use LDAP authentication. Name of the security domain that the user or group belongs to. Default is Native." default-value="${p:resource/informatica/tarsecurityDomain}"/>
	  </property>
      <property name="infaHome">
        <property-ui type="textBox" label="INFA HOME" description="The INFA_HOME variable to be set on the environment. If set we will also use ${INFA_HOME}/server/bin/pmrep as the exe and add this to LD_LIBRARY_PATH and LIBPATH"/>
      </property>
      <property name="srcrepo" required="true">
        <property-ui type="textBox" label="Source Repository" description="The repository name in Informatica for the source server." default-value="${p:resource/informatica/srcrepo}"/>
      </property>
      <property name="srcdomain">
        <property-ui type="textBox" label="Source Domain Name" description="The domain name of the Informatica server for the source server." default-value="${p:resource/informatica/srcdomain}"/>
      </property>
      <property name="srchost">
        <property-ui type="textBox" label="Source Host" description="The host name of the Informatica server for the source server." default-value="${p:resource/informatica/srchost}"/>
      </property>
      <property name="srcport">
        <property-ui type="textBox" label="Source Port" description="The port number of the Informatica server for the source server." default-value="${p:resource/informatica/srcport}"/>
      </property>
      <property name="srcsecurityDomain" required="false">
        <property-ui type="textBox" label="Source Security Domain" description="Required if you use LDAP authentication. Name of the security domain that the user or group belongs to. Default is Native." default-value="${p:resource/informatica/srcsecurityDomain}"/>
      </property>
      <property name="srcusername" required="true">
        <property-ui type="textBox" label="Source Username" description="The username to use to authenticate with Informatica for the source server." default-value="${p:resource/informatica/srcusername}"/>
      </property>
      <property name="srcpassword">
        <property-ui type="secureBox" label="Source Password" description="The password to use to authenticate with Informatica for the source server." default-value="${p:resource/informatica/srcpassword}"/>
      </property>
      <property name="srcpasswordscript">
        <property-ui type="textBox" label="Source Password Script" description="If a property or script should be used to retrieve the password, leave it blank and put the property or script here for the source server." default-value="${p:resource/informatica/srcpassscript}"/>
      </property>
      <property name="groupname" required="false">
        <property-ui type="textBox" label="Informatica Group" description="The name of the deployment group to deploy."/>
      </property>
      <property name="groupnameInputFile" required="false">
        <property-ui type="textBox" label="Informatica Group Input File" description="An input file containing multiple Deployment Groups separated by new line character."/>
      </property>
      <property name="folder" >
        <property-ui type="textAreaBox" label="Source Informatica Folder(s)" description="The source folder(s) of the deployment group objects. Separate each folder with a comma or new line."/>
      </property>
      <property name="folderDest">
        <property-ui type="textAreaBox" label="Destination Informatica Folder(s)" description="The destination folder(s) for the deployment group objects.
                    This is a 1:1 mapping with 'Source Informatica Folder(S)'. Separate each folder with a comma or new line. If this property is blank, the source
                    folder names will be used as the destination folder names. "/>
      </property>
      <property name="label" required="false">
        <property-ui type="textBox" label="Informatica Label" description="The name of the label used to populate the dynamic deployment group if deploying a dynamic deployment group." hidden="true" />
      </property>
      <property name="copydeploymentgroup" required="false">
        <property-ui type="checkBox" label="Copy Deployment Group" description="Control Parameter: Select to copy the deployment group with its objects (in the deployment group) to the target repository." hidden="true" />
      </property>
    </properties>
    <post-processing><![CDATA[
        if (properties.get("exitCode") != 0) {
            properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
        }
        else {
            properties.put("Status", "Success");
        }
     ]]></post-processing>
    <command program="${GROOVY_HOME}/bin/groovy">
      <arg value="-cp"/>
      <arg path="classes:lib/groovy-plugin-utils-1.2.jar"/>
      <arg file="informatica_deploy_multi_deployment_groups.groovy"/>
      <arg file="${PLUGIN_INPUT_PROPS}"/>
      <arg file="${PLUGIN_OUTPUT_PROPS}"/>
    </command>
  </step-type>
</plugin>
